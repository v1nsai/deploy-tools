heat_template_version: rocky

description: >
  HOT template to deploy two servers into an existing neutron tenant network and
  assign floating IP addresses to each server so they are routable from the
  public network.

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: dr_ew
  image:
    type: string
    description: Name of image to use for servers
    default: 5557a492-f9f9-4a8a-98ec-5f642b611d23 # Ubuntu 22.04
  flavor:
    type: string
    description: Flavor to use for servers
    default: alt.st1.small
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    default: External
  public_subnet_id:
    type: string
    description: you know
    default: Internet_d85720c0 # 4e7309a5-50d3-46f1-bf37-2f2af80e3130
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: Internal
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: e5adf695-3517-40d8-bc86-c1a69408e038 # Internal's only subnet
  security_groups: 
    type: comma_delimited_list 
    default: 
      - "ssh-ingress"
      - "default"

resources:
  server1:
    type: OS::Nova::Server
    properties:
      name: Server1
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      # security_groups:
      #   - ssh-ingress
      #   - default
      networks:
        - port: { get_resource: server1_internal_port }
        - port: { get_resource: server1_external_port }
        # - network: Internal
        # - network: External

  server1_internal_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: #{ get_param: security_groups } #[{ get_resource: server_security_group }]
        - "default"

  server1_external_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: public_net_id }
      fixed_ips:
      - subnet_id: { get_param: public_subnet_id }
      security_groups: #{ get_param: security_groups } #[{ get_resource: server_security_group }]
        - "default"
        - "ssh-ingress"

  server1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net_id }
      port_id: { get_resource: server1_external_port }