heat_template_version: rocky

description: >
  Default cloud deployment image to build from

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: nextcloud
  image:
    type: string
    description: Name of image to use for servers
    default: nextcloud
  flavor:
    type: string
    description: Flavor to use for servers
    default: alt.st1.small
  public_network_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    default: External
  private_network_id:
    type: string
    description: ID of private network into which servers get deployed
    default: private_network
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: private_subnet1 # private's only subnet
  floating_network_id:
    type: string
    default: dmz_network
  floating_subnet_id:
    type: string
    default: dmz_subnet1
  security_groups: 
    type: comma_delimited_list 
    default: 
      - "ssh-ingress"
      - "default"
  ssh_pubkey:
    type: string
    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuRaucksa4n9qO/xGYl3xDZzzV98vFOuXBeJxpOWNzL2NUPJNFWXchsoM7MGGlkNaxKueuFgweyYSBNxq6103tVXhA6NgIxBlM2eibFCUZKdlIY27LYWJnh22TaQXLEmXIOdFfAyWeUOIInsgvqF7AGjnX4JIQjYIoHS+h/maGVDsQqc83kR3PclTicrckwf143uZNJ/AC+jZhsZ4Xbfq/TKgx6IWjY3YEQCN8SC0q4ACNMdstR7aKcdN+S7D03gvsFDDKcUDka0i1fFK+bXEFB5GD1dz4T97o+7wV+W74frE7Loup4/2C5T1T7n+s9JYmIYOmwpcP7lyLz0bzf1XH Generated-by-Nova

resources:
  server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
      - port: { get_resource: server_private_port }
      - port: { get_resource: server_public_port }
      user_data_format: RAW
      user_data: { get_resource: server_init }

  server_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_network_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: #{ get_param: security_groups } #[{ get_resource: server_security_group }]
        - "default"
        - "ssh-ingress"

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network_id }
      port_id: { get_resource: server_public_port }

  server_public_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: floating_network_id }
      fixed_ips:
        - subnet_id: { get_param: floating_subnet_id }
      security_groups: #{ get_param: security_groups } #[{ get_resource: server_security_group }]
        - "default"
        - "ssh-ingress"

  server_init:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        #cloud-config
        users:
          - name: drew
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            ssh-authorized-keys:
             - { get_param: ssh_pubkey }
        write_files:
          - content: { get_file: ../scripts/setup-ssh.sh }
            owner: root:root
            permissions: '0774'
            path: /etc/setup-ssh.sh
        runcmd:
          - bash -c /etc/setup-ssh.sh

outputs:
  server_public_ip:
    description: public IP address of the deployed compute instance
    value: { get_attr: [server_floating_ip, floating_ip_address] }
  server_dmz_ip:
    description: private IP address on the dmz_network
    value: { get_attr: [server, networks, dmz_network, 0] }
  server_private_ip:
    description: private IP address on an private_network network only accessible through the firewall
    value: { get_attr: [server, networks, private_network, 0] }