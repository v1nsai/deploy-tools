heat_template_version: rocky

description: >
  Simple single node jump server template

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: dr_ew
  image:
    type: string
    description: Name of image to use for servers
    default: a867b089-c152-4a8e-9932-12e7094bdb4d # Fedora
  flavor:
    type: string
    description: Flavor to use for servers
    default: alt.st1.small
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    default: External
  public_subnet_id:
    type: string
    default: Internet_d85720c0 # 4e7309a5-50d3-46f1-bf37-2f2af80e3130
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: Internal
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: e5adf695-3517-40d8-bc86-c1a69408e038 # Internal's only subnet
  security_groups: 
    type: comma_delimited_list 
    default: [ "default", "ssh-ingress" ]
  ssh_port:
    type: number
    default: 1355

resources:
  jump-server-1:
    type: OS::Nova::Server
    properties:
      name: jump-server-1
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: jump-server-1-port }
      user_data: { get_resource: jump-server-init }

  jump-server-1-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups:
        - default
        - ssh-ingress
        # TODO: get list from params and iterate through it correctly
        # repeat:
        #   for_each:
        #     <%security_group%>: { get_param: security_groups }
        #   template:
        #     - <%security_group%>

  jump-server-1-floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: jump-server-1-port }

  jump-server-init:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        #cloud-config
        users:
          - name: drew
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
        runcmd:
          - sed -i'' -e "s/[\#]*Port\s.*/Port 1355/" /etc/ssh/sshd_config
          - sed -i'' -e 's/[\#]*PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
          - sed -i'' -e '$aAllowUsers drew' /etc/ssh/sshd_config
          - restart ssh